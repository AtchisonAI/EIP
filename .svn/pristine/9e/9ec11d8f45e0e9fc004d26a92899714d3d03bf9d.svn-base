using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EIP.Common.Entities.Paging;
using System.Data;
using System.IO;

namespace HiDM.Reporting.DataAccess
{
    public class WIPWaferInOutRptRepository : ReportingRepository, IWIPWaferInOutRptRepository
    {
        public DataTable QueryMonInWaferInfo(Models.WIPWaferInOutInput InfoInput)
        {
            string sStart = InfoInput.sMonthStart + "01 000001";
            string sEnd = DateTime.ParseExact(InfoInput.sMonthEnd, "yyyyMM", System.Globalization.CultureInfo.CurrentCulture).AddMonths(1).AddDays(-1).ToString("yyyyMMdd") + " 235959";

            string sql = string.Format(sMonIn, sStart, sEnd);
            return base.QueryDataTable(sql, "Summary", InfoInput.GetManualParams());
        }


        public DataTable QueryMonOutWaferInfo(Models.WIPWaferInOutInput InfoInput)
        {
            string sStart = InfoInput.sMonthStart + "01 000001";
            string sEnd = DateTime.ParseExact(InfoInput.sMonthEnd, "yyyyMM", System.Globalization.CultureInfo.CurrentCulture).AddMonths(1).AddDays(-1).ToString("yyyyMMdd") + " 235959";

            string sql = string.Format(sMonOut, sStart, sEnd);
            return base.QueryDataTable(sql, "Summary", InfoInput.GetManualParams());
        }


        public DataTable QueryMTDInWaferInfo(Models.WIPWaferInOutInput InfoInput)
        {

            string sql = string.Format(sMTDIn, InfoInput.sMTD, InfoInput.sMTD, InfoInput.sMTD);
            return base.QueryDataTable(sql, "Summary", InfoInput.GetManualParams());
        }


        public DataTable QueryMTDOutWaferInfo(Models.WIPWaferInOutInput InfoInput)
        {
            string sql = string.Format(sMTDOut, InfoInput.sMTD, InfoInput.sMTD, InfoInput.sMTD);
            return base.QueryDataTable(sql, "Summary", InfoInput.GetManualParams());
        }

        private string sMonIn = @"SELECT  'Fab In' Series ,
                      SUBSTR(TXNTIMESTAMP, 1, 6) name,
                     decode(ACTIVITY, 'LotStart', SUM(LOTQTYOUT), 0) value
                FROM FWWIPTRANSACTION
               where ACTIVITY in ('LotStart', 'Ship')
                 AND (TXNTIMESTAMP >= {0} AND
                     TXNTIMESTAMP <= {1})
               GROUP BY SUBSTR(TXNTIMESTAMP, 1, 6), ACTIVITY";

        private string sMonOut = @"              SELECT  'Fab Out' Series ,
                      SUBSTR(TXNTIMESTAMP, 1, 6) name,
                    decode(ACTIVITY, 'Ship', SUM(LOTQTYOUT), 0)  value
                FROM FWWIPTRANSACTION
               where ACTIVITY in ('LotStart', 'Ship')
                 AND (TXNTIMESTAMP >= {0} AND
                     TXNTIMESTAMP <= {1})
               GROUP BY SUBSTR(TXNTIMESTAMP, 1, 6), ACTIVITY";

        private string sMTDIn = @"with tt as(
select to_char(to_date({0},'yyyymm')+(rownum-1),'yyyymmdd') s_date 
from dual  
connect by rownum<=last_day(to_date({1},'yyyymm')) - to_date({3},'yyyymm')+1
) 
select 'Fab In' Series,tt.s_date name,
nvl((select SUM(act.LOTQTYOUT) from FWWIPTRANSACTION act
where  SUBSTR(act.TXNTIMESTAMP,1,8) = tt.s_date
and  act.ACTIVITY = 'LotStart'),0) value
from tt ";


        private string sMTDOut = @"with tt as(
select to_char(to_date({0},'yyyymm')+(rownum-1),'yyyymmdd') s_date 
from dual  
connect by rownum<=last_day(to_date({1},'yyyymm')) - to_date({2},'yyyymm')+1
) 
select 'Fab Out' Series ,tt.s_date name,
nvl((select SUM(act.LOTQTYOUT) from FWWIPTRANSACTION act
where  SUBSTR(act.TXNTIMESTAMP,1,8) = tt.s_date
and  act.ACTIVITY = 'Ship'),0) value
from tt ";


    }
}


using System.Threading.Tasks;
using EIP.Common.Business;
using EIP.Common.Core.Extensions;
using EIP.Common.Core.Resource;
using EIP.Common.Core.Utils;
using EIP.Common.Entities;
using EIP.Common.Entities.Dtos;
using EIP.{{NameSpace}}.DataAccess;
using EIP.{{NameSpace}}.Models.Entities;

namespace EIP.{{NameSpace}}.Business
{
    /// <summary>
    ///     {{Description}}业务逻辑接口实现
    /// </summary>
    public class {{ClassName}}Logic : AsyncLogic<{{ClassName}}>, I{{ClassName}}Logic
    {
        #region 构造函数
        private readonly I{{ClassName}}Repository _{{ClassNameLower}}Repository;
        public {{ClassName}}Logic(I{{ClassName}}Repository {{ClassNameLower}}Repository)
            : base({{ClassNameLower}}Repository)
        {
            _{{ClassNameLower}}Repository = {{ClassNameLower}}Repository;
        }

        #endregion

        #region 方法

        /// <summary>
        ///     保存
        /// </summary>
        /// <param name="entity">实体</param>
        /// <returns></returns>
        public async Task<OperateStatus> Save({{ClassName}} entity)
        {
            if (!entity.{{KeyName}}.IsEmptyGuid())
                return await UpdateAsync(entity);
            entity.{{KeyName}} = CombUtil.NewComb();
            return await InsertAsync(entity);
        }
        #endregion
    }
}